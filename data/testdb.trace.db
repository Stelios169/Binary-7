2025-01-18 20:35:50.097746+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "-- -- Licensed under the Apache License, Version 2.0\000d\000a-- -- For more details, see the LICENSE file in the root directory.\000d\000a\000d\000a-- -- ! DO NOT RUN THE FOLLOWING BLOCK IF NOT NESESERY !\000d\000a-- -- Only do so in case the database schema is recreated\000d\000a\000d\000a\000d\000a-- INSERT INTO Progr.Restaurant (restaurant_id, restaurant_name, restaurant_address, restaurant_tel, restaurant_afm, restaurant_email, restaurant_rating, restaurant_password)\000d\000a-- VALUES\000d\000a--     (1, 'La Pasteria', 'Patision 28, Athens', 2101234567, 123456789012, 'despinalab@gmail.com', 4.5, 'password123'),\000d\000a--     (2, 'Shisan', 'Ermou 8, Athens', 2109876543, 987654321098, 'stella.panopoulou678@gmail.com', 4.8, 'password456');\000d\000a\000d\000a\000d\000a-- INSERT INTO Progr.Dish (dish_id, dish_name, dish_category, dish_price, dish_image_url, dish_description, dish_availability)\000d\000a-- VALUES\000d\000a--     (1, 'Margherita Pizza', 'Main Courses', 9.99, 'http://example.com/margherita.jpg', 'Classic pizza with tomatoes and mozzarella', TRUE),\000d\000a--     (2, 'Pepperoni Pizza', 'Main Courses', 12.99, 'http://example.com/pepperoni.jpg', 'Pizza topped with pepperoni and cheese', TRUE),\000d\000a--     (3, 'Salmon Sushi', 'Main Courses', 15.99, 'http://example.com/salmon.jpg', 'Fresh salmon sushi with rice', TRUE),\000d\000a--     (4, 'Garlic Bread', 'Appetizers', 5.99, 'http://example.com/garlicbread.jpg', 'Toasted bread with garlic butter and herbs', TRUE),\000d\000a--     (5, 'Bruschetta', 'Appetizers', 6.99, 'http://example.com/bruschetta.jpg', 'Grilled bread topped with tomato, garlic, and basil', TRUE),\000d\000a--     (6, 'Tuna Sashimi', 'Main Courses', 18.99, 'http://example.com/tuna_sashimi.jpg', 'Freshly sliced tuna served as sashimi', TRUE),\000d\000a--     (7, 'Maki Roll', 'Main Courses', 12.99, 'http://example.com/maki_roll.jpg', 'Rolled sushi with various fillings', TRUE),\000d\000a--     (8, 'Edamame', 'Appetizers', 4.99, 'http://example.com/edamame.jpg', 'Steamed young soybeans with sea salt', TRUE),\000d\000a--     (9, 'Tempura Shrimp', 'Main Courses', 13.99, 'http://example.com/tempura_shrimp.jpg', 'Crispy deep-fried shrimp served with dipping sauce', TRUE),\000d\000a--     (10, 'Tiramisu', 'Desserts', 6.99, 'http://example.com/tiramisu.jpg', 'Classic Italian dessert with coffee-soaked ladyfingers', TRUE),\000d\000a--     (11, 'Ice Cream', 'Desserts', 5.99, 'http://example.com/ice_cream.jpg', 'Creamy ice cream made with green tea', TRUE);\000d\000a\000d\000a-- INSERT INTO Progr.Ingredient (ingredient_id, ingredient_name, ingredient_cost, ingredient_unit, ingredient_stock, ingredient_exp_date)\000d\000a-- VALUES\000d\000a--     (1, 'Tomato', 1.2, 'kg', 50.0, '2025-01-20'),\000d\000a--     (2, 'Mozzarella Cheese', 3.0, 'kg', 30.0, '2025-01-21'),\000d\000a--     (3, 'Pepperoni', 5.0, 'kg', 20.0, '2025-01-22'),\000d\000a--     (4, 'Salmon', 10.0, 'kg', 15.0, '2025-01-17'),\000d\000a--     (5, 'Garlic', 0.5, 'kg', 10.0, '2025-01-29'),\000d\000a--     (6, 'Basil', 2.0, 'kg', 15.0, '2025-01-20'),\000d\000a--     (7, 'Tuna', 12.0, 'kg', 10.0, '2025-01-23'),\000d\000a--     (8, 'Rice', 1.5, 'kg', 100.0, '2025-01-25'),\000d\000a--     (9, 'Nori Seaweed', 0.8, 'kg', 50.0, '2025-01-27'),\000d\000a--     (10, 'Shrimp', 8.0, 'kg', 10.0, '2025-01-22'),\000d\000a--     (11, 'Soy Sauce', 2.0, 'lt', 30.0, '2025-01-22'),\000d\000a--     (12, 'Tempura Flour', 3.0, 'kg', 20.0, '2025-02-22');\000d\000a\000d\000a-- INSERT INTO Progr.DishIngredients (dish_id, ingredient_id, ingredient_quantity)\000d\000a-- VALUES\000d\000a--     (1, 1, 0.2),\000d\000a--     (1, 2, 0.3),\000d\000a--     (2, 2, 0.3),\000d\000a--     (2, 3, 0.5),\000d\000a--     (3, 4, 0.1),\000d\000a--     (3, 8, 0.2),\000d\000a--     (4, 5, 0.1),\000d\000a--     (4, 6, 0.05), \000d\000a--     (5, 1, 0.15),\000d\000a--     (5, 6, 0.1),\000d\000a--     (6, 7, 0.1),\000d\000a--     (7, 9, 0.05),\000d\000a--     (7, 8, 0.1),\000d\000a--     (8, 10, 0.2),\000d\000a--     (9, 10, 0.3),\000d\000a--     (9, 12, 0.1),\000d\000a--     (10, 4, 0.1),\000d\000a--     (11, 4, 0.05);\000d\000a\000d\000a-- INSERT INTO Progr.RTable (table_id, restaurant_id)\000d\000a-- VALUES\000d\000a-- (1, 1), (2, 1), (3, 1), (4, 1), (5, 1),\000d\000a-- (6, 1), (7, 1), (8, 1), (9, 1), (10, 1),\000d\000a-- (11, 1), (12, 1), (13, 1), (14, 1), (15, 1),\000d\000a-- (16, 1), (17, 1), (18, 1), (19, 1), (20, 1),\000d\000a-- (21, 1), (22, 1), (23, 1), (24, 1), (25, 1),\000d\000a-- (26, 1), (27, 1), (28, 1), (29, 1), (30, 1),\000d\000a-- (31, 1), (32, 1), (33, 1), (34, 1), (35, 1),\000d\000a-- (36, 1), (37, 1), (38, 1), (39, 1), (40, 1),\000d\000a-- (41, 1), (42, 1), (43, 1), (44, 1), (45, 1),\000d\000a-- (46, 1), (47, 1), (48, 1), (49, 1), (50, 1),\000d\000a-- (51, 1), (52, 1), (53, 1), (54, 1), (55, 1),\000d\000a-- (56, 1), (57, 1), (58, 1), (59, 1), (60, 1),\000d\000a-- (61, 1), (62, 1), (63, 1), (64, 1), (65, 1),\000d\000a-- (66, 1), (67, 1), (68, 1), (69, 1), (70, 1),\000d\000a-- (71, 1), (72, 1), (73, 1), (74, 1), (75, 1),\000d\000a-- (76, 1), (77, 1), (78, 1), (79, 1), (80, 1),\000d\000a-- (81, 1), (82, 1), (83, 1), (84, 1), (85, 1),\000d\000a-- (86, 1), (87, 1), (88, 1), (89, 1), (90, 1),\000d\000a-- (91, 1), (92, 1), (93, 1), (94, 1), (95, 1),\000d\000a-- (96, 1), (97, 1), (98, 1), (99, 1), (100, 1),\000d\000a-- (1, 2), (2, 2), (3, 2), (4, 2), (5, 2),\000d\000a-- (6, 2), (7, 2), (8, 2), (9, 2), (10, 2),\000d\000a-- (11, 2), (12, 2), (13, 2), (14, 2), (15, 2),\000d\000a-- (16, 2), (17, 2), (18, 2), (19, 2), (20, 2),\000d\000a-- (21, 2), (22, 2), (23, 2), (24, 2), (25, 2),\000d\000a-- (26, 2), (27, 2), (28, 2), (29, 2), (30, 2),\000d\000a-- (31, 2), (32, 2), (33, 2), (34, 2), (35, 2),\000d\000a-- (36, 2), (37, 2), (38, 2), (39, 2), (40, 2),\000d\000a-- (41, 2), (42, 2), (43, 2), (44, 2), (45, 2),\000d\000a-- (46, 2), (47, 2), (48, 2), (49, 2), (50, 2),\000d\000a-- (51, 2), (52, 2), (53, 2), (54, 2), (55, 2),\000d\000a-- (56, 2), (57, 2), (58, 2), (59, 2), (60, 2),\000d\000a-- (61, 2), (62, 2), (63, 2), (64, 2), (65, 2),\000d\000a-- (66, 2), (67, 2), (68, 2), (69, 2), (70, 2),\000d\000a-- (71, 2), (72, 2), (73, 2), (74, 2), (75, 2),\000d\000a-- (76, 2), (77, 2), (78, 2), (79, 2), (80, 2),\000d\000a-- (81, 2), (82, 2), (83, 2), (84, 2), (85, 2),\000d\000a-- (86, 2), (87, 2), (88, 2), (89, 2), (90, 2),\000d\000a-- (91, 2), (92, 2), (93, 2), (94, 2), (95, 2),\000d\000a-- (96, 2), (97, 2), (98, 2), (99, 2), (100, 2);\000d\000a\000d\000a-- INSERT INTO Progr.RestaurantDishes (restaurant_id, dish_id)\000d\000a-- VALUES\000d\000a--     (1, 1),\000d\000a--     (1, 2),\000d\000a--     (2, 3),\000d\000a--     (1, 4),\000d\000a--     (1, 5),\000d\000a--     (2, 6),\000d\000a--     (2, 7),\000d\000a--     (2, 8),\000d\000a--     (2, 9),\000d\000a--     (1, 10),\000d\000a--     (2, 11);\000d\000a\000d\000a\000d\000a-- INSERT INTO Progr.OrderPerDish (dish_id, order_id, orderPerDish_quantity)\000d\000a-- VALUES\000d\000a--     (1, 1, 2),\000d\000a--     (2, 1, 1),\000d\000a--     (3, 2, 1),\000d\000a--     (4, 2, 2),\000d\000a--     (5, 3, 1),\000d\000a--     (3, 4, 4);\000d\000a\000d\000a\000d\000a[*]<<<<<<< HEAD\000d\000aINSERT INTO Progr.OrderPerDish (dish_id, order_id, orderPerDish_quantity)\000d\000aVALUES\000d\000a    (1, 1, 2),\000d\000a    (2, 1, 1),\000d\000a    (3, 2, 1),\000d\000a    (4, 2, 2),\000d\000a    (5, 3, 1),\000d\000a    (3, 4, 4); \000d\000a=======\000d\000a>>>>>>> 3b9204500217f1f9e9b91f19dfb7eaa77cd72db7\000d\000a"; SQL statement:
-- -- Licensed under the Apache License, Version 2.0
-- -- For more details, see the LICENSE file in the root directory.

-- -- ! DO NOT RUN THE FOLLOWING BLOCK IF NOT NESESERY !
-- -- Only do so in case the database schema is recreated


-- INSERT INTO Progr.Restaurant (restaurant_id, restaurant_name, restaurant_address, restaurant_tel, restaurant_afm, restaurant_email, restaurant_rating, restaurant_password)
-- VALUES
--     (1, 'La Pasteria', 'Patision 28, Athens', 2101234567, 123456789012, 'despinalab@gmail.com', 4.5, 'password123'),
--     (2, 'Shisan', 'Ermou 8, Athens', 2109876543, 987654321098, 'stella.panopoulou678@gmail.com', 4.8, 'password456');


-- INSERT INTO Progr.Dish (dish_id, dish_name, dish_category, dish_price, dish_image_url, dish_description, dish_availability)
-- VALUES
--     (1, 'Margherita Pizza', 'Main Courses', 9.99, 'http://example.com/margherita.jpg', 'Classic pizza with tomatoes and mozzarella', TRUE),
--     (2, 'Pepperoni Pizza', 'Main Courses', 12.99, 'http://example.com/pepperoni.jpg', 'Pizza topped with pepperoni and cheese', TRUE),
--     (3, 'Salmon Sushi', 'Main Courses', 15.99, 'http://example.com/salmon.jpg', 'Fresh salmon sushi with rice', TRUE),
--     (4, 'Garlic Bread', 'Appetizers', 5.99, 'http://example.com/garlicbread.jpg', 'Toasted bread with garlic butter and herbs', TRUE),
--     (5, 'Bruschetta', 'Appetizers', 6.99, 'http://example.com/bruschetta.jpg', 'Grilled bread topped with tomato, garlic, and basil', TRUE),
--     (6, 'Tuna Sashimi', 'Main Courses', 18.99, 'http://example.com/tuna_sashimi.jpg', 'Freshly sliced tuna served as sashimi', TRUE),
--     (7, 'Maki Roll', 'Main Courses', 12.99, 'http://example.com/maki_roll.jpg', 'Rolled sushi with various fillings', TRUE),
--     (8, 'Edamame', 'Appetizers', 4.99, 'http://example.com/edamame.jpg', 'Steamed young soybeans with sea salt', TRUE),
--     (9, 'Tempura Shrimp', 'Main Courses', 13.99, 'http://example.com/tempura_shrimp.jpg', 'Crispy deep-fried shrimp served with dipping sauce', TRUE),
--     (10, 'Tiramisu', 'Desserts', 6.99, 'http://example.com/tiramisu.jpg', 'Classic Italian dessert with coffee-soaked ladyfingers', TRUE),
--     (11, 'Ice Cream', 'Desserts', 5.99, 'http://example.com/ice_cream.jpg', 'Creamy ice cream made with green tea', TRUE);

-- INSERT INTO Progr.Ingredient (ingredient_id, ingredient_name, ingredient_cost, ingredient_unit, ingredient_stock, ingredient_exp_date)
-- VALUES
--     (1, 'Tomato', 1.2, 'kg', 50.0, '2025-01-20'),
--     (2, 'Mozzarella Cheese', 3.0, 'kg', 30.0, '2025-01-21'),
--     (3, 'Pepperoni', 5.0, 'kg', 20.0, '2025-01-22'),
--     (4, 'Salmon', 10.0, 'kg', 15.0, '2025-01-17'),
--     (5, 'Garlic', 0.5, 'kg', 10.0, '2025-01-29'),
--     (6, 'Basil', 2.0, 'kg', 15.0, '2025-01-20'),
--     (7, 'Tuna', 12.0, 'kg', 10.0, '2025-01-23'),
--     (8, 'Rice', 1.5, 'kg', 100.0, '2025-01-25'),
--     (9, 'Nori Seaweed', 0.8, 'kg', 50.0, '2025-01-27'),
--     (10, 'Shrimp', 8.0, 'kg', 10.0, '2025-01-22'),
--     (11, 'Soy Sauce', 2.0, 'lt', 30.0, '2025-01-22'),
--     (12, 'Tempura Flour', 3.0, 'kg', 20.0, '2025-02-22');

-- INSERT INTO Progr.DishIngredients (dish_id, ingredient_id, ingredient_quantity)
-- VALUES
--     (1, 1, 0.2),
--     (1, 2, 0.3),
--     (2, 2, 0.3),
--     (2, 3, 0.5),
--     (3, 4, 0.1),
--     (3, 8, 0.2),
--     (4, 5, 0.1),
--     (4, 6, 0.05), 
--     (5, 1, 0.15),
--     (5, 6, 0.1),
--     (6, 7, 0.1),
--     (7, 9, 0.05),
--     (7, 8, 0.1),
--     (8, 10, 0.2),
--     (9, 10, 0.3),
--     (9, 12, 0.1),
--     (10, 4, 0.1),
--     (11, 4, 0.05);

-- INSERT INTO Progr.RTable (table_id, restaurant_id)
-- VALUES
-- (1, 1), (2, 1), (3, 1), (4, 1), (5, 1),
-- (6, 1), (7, 1), (8, 1), (9, 1), (10, 1),
-- (11, 1), (12, 1), (13, 1), (14, 1), (15, 1),
-- (16, 1), (17, 1), (18, 1), (19, 1), (20, 1),
-- (21, 1), (22, 1), (23, 1), (24, 1), (25, 1),
-- (26, 1), (27, 1), (28, 1), (29, 1), (30, 1),
-- (31, 1), (32, 1), (33, 1), (34, 1), (35, 1),
-- (36, 1), (37, 1), (38, 1), (39, 1), (40, 1),
-- (41, 1), (42, 1), (43, 1), (44, 1), (45, 1),
-- (46, 1), (47, 1), (48, 1), (49, 1), (50, 1),
-- (51, 1), (52, 1), (53, 1), (54, 1), (55, 1),
-- (56, 1), (57, 1), (58, 1), (59, 1), (60, 1),
-- (61, 1), (62, 1), (63, 1), (64, 1), (65, 1),
-- (66, 1), (67, 1), (68, 1), (69, 1), (70, 1),
-- (71, 1), (72, 1), (73, 1), (74, 1), (75, 1),
-- (76, 1), (77, 1), (78, 1), (79, 1), (80, 1),
-- (81, 1), (82, 1), (83, 1), (84, 1), (85, 1),
-- (86, 1), (87, 1), (88, 1), (89, 1), (90, 1),
-- (91, 1), (92, 1), (93, 1), (94, 1), (95, 1),
-- (96, 1), (97, 1), (98, 1), (99, 1), (100, 1),
-- (1, 2), (2, 2), (3, 2), (4, 2), (5, 2),
-- (6, 2), (7, 2), (8, 2), (9, 2), (10, 2),
-- (11, 2), (12, 2), (13, 2), (14, 2), (15, 2),
-- (16, 2), (17, 2), (18, 2), (19, 2), (20, 2),
-- (21, 2), (22, 2), (23, 2), (24, 2), (25, 2),
-- (26, 2), (27, 2), (28, 2), (29, 2), (30, 2),
-- (31, 2), (32, 2), (33, 2), (34, 2), (35, 2),
-- (36, 2), (37, 2), (38, 2), (39, 2), (40, 2),
-- (41, 2), (42, 2), (43, 2), (44, 2), (45, 2),
-- (46, 2), (47, 2), (48, 2), (49, 2), (50, 2),
-- (51, 2), (52, 2), (53, 2), (54, 2), (55, 2),
-- (56, 2), (57, 2), (58, 2), (59, 2), (60, 2),
-- (61, 2), (62, 2), (63, 2), (64, 2), (65, 2),
-- (66, 2), (67, 2), (68, 2), (69, 2), (70, 2),
-- (71, 2), (72, 2), (73, 2), (74, 2), (75, 2),
-- (76, 2), (77, 2), (78, 2), (79, 2), (80, 2),
-- (81, 2), (82, 2), (83, 2), (84, 2), (85, 2),
-- (86, 2), (87, 2), (88, 2), (89, 2), (90, 2),
-- (91, 2), (92, 2), (93, 2), (94, 2), (95, 2),
-- (96, 2), (97, 2), (98, 2), (99, 2), (100, 2);

-- INSERT INTO Progr.RestaurantDishes (restaurant_id, dish_id)
-- VALUES
--     (1, 1),
--     (1, 2),
--     (2, 3),
--     (1, 4),
--     (1, 5),
--     (2, 6),
--     (2, 7),
--     (2, 8),
--     (2, 9),
--     (1, 10),
--     (2, 11);


-- INSERT INTO Progr.OrderPerDish (dish_id, order_id, orderPerDish_quantity)
-- VALUES
--     (1, 1, 2),
--     (2, 1, 1),
--     (3, 2, 1),
--     (4, 2, 2),
--     (5, 3, 1),
--     (3, 4, 4);


<<<<<<< HEAD
INSERT INTO Progr.OrderPerDish (dish_id, order_id, orderPerDish_quantity)
VALUES
    (1, 1, 2),
    (2, 1, 1),
    (3, 2, 1),
    (4, 2, 2),
    (5, 3, 1),
    (3, 4, 4); 
=======
>>>>>>> 3b9204500217f1f9e9b91f19dfb7eaa77cd72db7
 [42000-232]
2025-01-18 22:38:14.955885+02:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.getConnectionUrl(H2ConsoleAutoConfiguration.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:636)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:291)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:656)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:662)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:667)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:86)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:69)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.withThreadContextClassLoader(H2ConsoleAutoConfiguration.java:78)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4426)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:516)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.demo.DemoApplication.main(DemoApplication.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 101 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 95 more
2025-01-18 22:38:16.121533+02:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.demo.DemoApplication.main(DemoApplication.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 48 more
2025-01-18 22:57:24.484935+02:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.getConnectionUrl(H2ConsoleAutoConfiguration.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:571)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:636)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:291)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:656)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:662)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:667)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:86)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:69)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.withThreadContextClassLoader(H2ConsoleAutoConfiguration.java:78)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4426)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:516)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.demo.DemoApplication.main(DemoApplication.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 101 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 95 more
2025-01-18 22:57:25.605502+02:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.demo.DemoApplication.main(DemoApplication.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/cygwin64/home/athan/Binary-7/data/testdb.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 48 more
